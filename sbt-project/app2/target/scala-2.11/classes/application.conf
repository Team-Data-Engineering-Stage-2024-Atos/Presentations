db {
  host = "postgres"
  port = 5432
  database = "dwh_dwh"
  username = "sparkuser"
  password = "passer"
}

spark {
  appName = "app2"
  master = "yarn"
}

etl {
  input {
    path = "hdfs://master-namenode:9000/data/raw/"
    format = "csv"
  }
  tables {
    dim_customers {
      datasets = ["customers.csv"]
      columns = ["customer_id", "first_name", "last_name", "email", "gender", "date_of_birth", "city", "state", "country", "age", "full_name"]
      operations = [
        { column = "email", operation = "lowercase" },
        { column = "first_name", operation = "uppercase" },
        { column = "full_name", operation = "concatenate", params = ["first_name", "last_name"] },
        { column = "age", operation = "calculate_age", params = ["date_of_birth"] }
      ]
    }
    dim_products {
      datasets = ["products.csv"]
      columns = ["product_id", "product_name", "category", "subcategory", "brand", "price"]
      operations = [
        { column = "category", operation = "standardize" },
        { column = "subcategory", operation = "standardize" }
      ]
    }
    dim_dates {
      datasets = ["dates.csv"]
      columns = ["date_id", "date", "day_of_week", "month", "quarter", "year"]
      operations = []
    }
    fact_sales {
      datasets = ["sales.csv"]
      columns = ["sale_id", "date_id", "customer_id", "product_id", "quantity", "total_amount"]
      operations = []
    }
    sales_mart {
      datasets = ["sales.csv"]
      columns = ["date_id", "product_id", "total_sales", "total_quantity", "total_customers", "average_price", "total_orders"]
      operations = [
        {
          operation = "aggregate"
          group_by = ["date_id", "product_id"]
          aggregations = [
            { column = "total_amount", operation = "sum", alias = "total_sales" },
            { column = "quantity", operation = "sum", alias = "total_quantity" },
            { column = "customer_id", operation = "countDistinct", alias = "total_customers" },
            { column = "total_amount", operation = "avg", alias = "average_price" },
            { column = "sale_id", operation = "count", alias = "total_orders" }
          ]
        }
      ]
    }
    customer_loyalty_mart {
      datasets = ["sales.csv"]
      columns = ["customer_id", "total_spend", "avg_order_value", "order_frequency", "first_purchase_date", "last_purchase_date", "days_since_last_purchase"]
      operations = [
        {
          operation = "aggregate"
          group_by = ["customer_id"]
          aggregations = [
            { column = "total_amount", operation = "sum", alias = "total_spend" },
            { column = "total_amount", operation = "avg", alias = "avg_order_value" },
            { column = "sale_id", operation = "count", alias = "order_frequency" },
            { column = "date_id", operation = "min", alias = "first_purchase_date" },
            { column = "date_id", operation = "max", alias = "last_purchase_date" }
          ]
        },
        {
          operation = "calculate"
          alias = "days_since_last_purchase"
          expression = "datediff(current_date(), last_purchase_date)"
        }
      ]
    }
    product_performance_mart {
      datasets = ["sales.csv", "products.csv"]
      join {
        type = "inner"
        columns = ["product_id"]
      }
      columns = ["product_id", "sales_volume", "average_price", "total_sales", "num_sales_transactions", "avg_quantity_per_order"]
      operations = [
        {
          operation = "aggregate"
          group_by = ["product_id"]
          aggregations = [
            { column = "quantity", operation = "sum", alias = "sales_volume" },
            { column = "price", operation = "avg", alias = "average_price" },
            { column = "total_amount", operation = "sum", alias = "total_sales" },
            { column = "sale_id", operation = "count", alias = "num_sales_transactions" }
          ]
        },
        {
          operation = "calculate"
          alias = "avg_quantity_per_order"
          expression = "sales_volume / num_sales_transactions"
        }
      ]
    }
  }
  output {
    target_table = ""
  }
}
